Σας παρέχουμε 15 τεστ. Για κάθε τεστ X σας δίνουμε τα εξής αρχεία:
	a_args_X: ορίσματα προγράμματος (περιλαμβάνει τις τιμές των μεγεθών M, K 
				που θα πρέπει να προσδιορίσετε κατά την εκτέλεση - δείτε εκφώνηση.)
	a_in_X: είσοδος
	a_out_X: αντίστοιχη αναμενόμενη έξοδος.

όπου Χ ένας ακέραιος από το 1 έως και το 15.


####################### ΕΚΤΕΛΕΣΗ ###################################
 
Υποθέτοντας ότι το εκτελέσιμο αρχείο λέγεται project1 γράψτε πρώτα 

./project1 M K < a_in_X 

για να εκτελέσετε το πρόγραμμά σας με ορίσματα τα μεγέθη Μ Κ που βλέπετε στο αρχείο
a_args_X και είσοδο τις εντολές που εμφανίζονται στο αρχείο a_in_X. 
Η έξοδος του προγράμματός σας θα εμφανιστεί στην οθόνη. Όταν θα είστε σίγουροι
ότι το πρόγραμμα δεν έχει ατέρμονη επανάληψη, γράψτε

./project1 M K < a_in_X > my_out_X

για να ανακατευθύνετε την έξοδο του προγράμματος στο αρχείο my_out_X ώστε να 
μπορέσετε να τη συγκρίνετε με την αναμενόμενη.

######################### ΕΛΕΓΧΟΣ ΣΥΜΒΑΤΙΚΗΣ ΕΞΟΔΟΥ  #################################
 
Μπορείτε να συγκρίνετε τη δική σας έξοδο με τη δική μας (αναμενόμενη) έξοδο γράφοντας:

diff a_out_X my_out_X

Αν δεν υπάρχουν διαφορές δε θα δείτε τίποτα. 

Αν έχετε διαφορές θα δείτε κάτι από τα παρακάτω :
34c34
< A-NOK BOYETT_S_AL 10 15
---
> A-OK 10 15
Αυτό σημαίνει ότι η γραμμή 34 του πρώτου αρχείου που δόθηκε στην εντολή 
diff πρέπει να αλλάξει (c=change) για να μοιάζει με τη γραμμή 34 του δεύτερου
αρχείου. Επίσης παρατίθενται οι εν λόγω γραμμές. Με < ξεκινά η γραμμή του πρώτου 
αρχείου και με > η γραμμή του δεύτερου.
 
21a22,23
> A-OK 10 15
> 
Αυτό σημαίνει ότι μετά τη γραμμή 21 του πρώτου αρχείου πρέπει να προστεθούν
(a=add) τα περιεχόμενα των γραμμών 22-23 του δεύτερου αρχείου (οι οποίες
παρατίθενται αμέσως μετά) για να ταιριάζουν τα αρχεία.

32d31
< 10 BOYETT_S_AL 3 10 15
Αυτό σημαίνει ότι πρέπει να σβηστεί (d=delete) η γραμμή 32 του πρώτου αρχείου
(η οποία εμφανίζεται αμέσως μετά) ώστε να ταιριάζουν τα δύο αρχεία. 

######################## ΕΛΕΓΧΟΣ ΕΞΟΔΟΥ ΛΑΘΩΝ ##################################
 
Επιπλέον, μπορείτε να ανακατευθύνετε και το stderr σε αρχείο ως εξής: 

./project1 M K < a_in_X > my_out_X  2> my_err_X

όπου my_err_X το αρχείο στο οποίο θα αποθηκευτεί η έξοδος που γράψατε στο stderr.
Σημείωση: η σύνταξη αυτή προϋποθέτει ότι το shell που τρέχετε είναι bash.
Δεδομένου ότι είναι το default, δε θα έχετε πρόβλημα.

######################### ΠΛΗΡΟΦΟΡΙΕΣ ΑΡΧΕΙΩΝ ΕΛΕΓΧΟΥ #################################

Τα τεστ που σας δίνουμε ελέγχουν τις παρακάτω περιπτώσεις: 

1: Add, no duplicates
2. Add, duplicates
3. Add with realloc, no duplicates
4. Add with realloc, duplicates
5. Find
6. Modify
7. Remove
8. Remove with realloc
9. Remove all, add, clear
10. Sort
11. Medium file, all operations
12. Sort sorted input
13. Sort reverse input
14. Έλεγχος συγκρίσεων κατά την ταξινόμηση ήδη ταξινομημένης λίστας και 
    αναζήτηση σε ταξινομημένη λίστα. Δείτε το a_err_14 για τα επιθυμητά 
    αποτελέσματα (μπορεί να έχετε απόκλιση κατά 1). 
15. Έλεγχος συγκρίσεων ταξινόμησης σε ανάποδα ταξινομημένη λίστα. 
    Δείτε το a_err_15 για τα επιθυμητά αποτελέσματα.

########################### ΕΠΙΠΛΕΟΝ ΑΡΧΕΙΑ ###############################
Επιπλέον, για τις μετρήσεις σας δίνουμε μια σειρά από αρχεία εισόδου τα οποία προσθέτουν
1000, 10000, 100000 εγγραφές με σειρά ταξινομημένη, αντίστροφα ταξινομημένη ή τυχαία.
